// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NTierArchitecture.Repository;

#nullable disable

namespace NTierArchitecture.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NTierArchitecture.Core.Models.Journey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ArrivalLocation")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartureLocation")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("JourneyDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Journeys", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArrivalLocation = "Ankara",
                            CreatedDate = new DateTime(2024, 1, 14, 13, 15, 13, 711, DateTimeKind.Local).AddTicks(6779),
                            DepartureLocation = "İstanbul",
                            JourneyDate = new DateTime(2024, 1, 12, 9, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ArrivalLocation = "Trabzon",
                            CreatedDate = new DateTime(2024, 1, 14, 13, 15, 13, 711, DateTimeKind.Local).AddTicks(6791),
                            DepartureLocation = "Antalya",
                            JourneyDate = new DateTime(2024, 1, 15, 13, 45, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ArrivalLocation = "Muğla",
                            CreatedDate = new DateTime(2024, 1, 14, 13, 15, 13, 711, DateTimeKind.Local).AddTicks(6792),
                            DepartureLocation = "Rize",
                            JourneyDate = new DateTime(2024, 1, 20, 15, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            ArrivalLocation = "Çanakkale",
                            CreatedDate = new DateTime(2024, 1, 14, 13, 15, 13, 711, DateTimeKind.Local).AddTicks(6794),
                            DepartureLocation = "Ankara",
                            JourneyDate = new DateTime(2024, 1, 23, 23, 15, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("NTierArchitecture.Core.Models.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JourneyId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TCNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("JourneyId");

                    b.HasIndex("TCNo")
                        .IsUnique();

                    b.ToTable("Passengers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 14, 13, 15, 13, 711, DateTimeKind.Local).AddTicks(7108),
                            EMail = "beyzakuru@hotmail.com",
                            FirstName = "Beyza",
                            Gender = "Kadın",
                            JourneyId = 1,
                            LastName = "Kuru",
                            Password = "hello61",
                            TCNo = "11111111111",
                            Telephone = "05363453435"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 1, 14, 13, 15, 13, 711, DateTimeKind.Local).AddTicks(7111),
                            EMail = "bahadircetin@hotmail.com",
                            FirstName = "Bahadır",
                            Gender = "Erkek",
                            JourneyId = 2,
                            LastName = "Çetin",
                            Password = "gymgyme",
                            TCNo = "22222222222",
                            Telephone = "05443903930"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 1, 14, 13, 15, 13, 711, DateTimeKind.Local).AddTicks(7112),
                            EMail = "silaguven@hotmail.com",
                            FirstName = "Sıla",
                            Gender = "Kadın",
                            JourneyId = 3,
                            LastName = "Güven",
                            Password = "beauty",
                            TCNo = "33333333333",
                            Telephone = "05438828882"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 1, 14, 13, 15, 13, 711, DateTimeKind.Local).AddTicks(7114),
                            EMail = "cantetik@hotmail.com",
                            FirstName = "Can",
                            Gender = "Erkek",
                            JourneyId = 4,
                            LastName = "Tetik",
                            Password = "joker",
                            TCNo = "44444444444",
                            Telephone = "05374634643"
                        });
                });

            modelBuilder.Entity("NTierArchitecture.Core.Models.Passport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("JourneyId")
                        .HasColumnType("int");

                    b.Property<int>("PassengerId")
                        .HasColumnType("int");

                    b.Property<string>("PassportNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("PassengerId");

                    b.ToTable("Passports", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpiryDate = new DateTime(2025, 1, 23, 12, 36, 0, 0, DateTimeKind.Unspecified),
                            JourneyId = 1,
                            PassengerId = 1,
                            PassportNo = "U111111111"
                        },
                        new
                        {
                            Id = 2,
                            ExpiryDate = new DateTime(2025, 2, 13, 13, 42, 0, 0, DateTimeKind.Unspecified),
                            JourneyId = 2,
                            PassengerId = 2,
                            PassportNo = "U222222222"
                        },
                        new
                        {
                            Id = 3,
                            ExpiryDate = new DateTime(2025, 3, 11, 16, 12, 0, 0, DateTimeKind.Unspecified),
                            JourneyId = 3,
                            PassengerId = 3,
                            PassportNo = "U333333333"
                        },
                        new
                        {
                            Id = 4,
                            ExpiryDate = new DateTime(2025, 4, 2, 8, 50, 0, 0, DateTimeKind.Unspecified),
                            JourneyId = 4,
                            PassengerId = 4,
                            PassportNo = "U444444444"
                        });
                });

            modelBuilder.Entity("NTierArchitecture.Core.Models.Passenger", b =>
                {
                    b.HasOne("NTierArchitecture.Core.Models.Journey", "Journey")
                        .WithMany("Passengers")
                        .HasForeignKey("JourneyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Journey");
                });

            modelBuilder.Entity("NTierArchitecture.Core.Models.Passport", b =>
                {
                    b.HasOne("NTierArchitecture.Core.Models.Passenger", "Passenger")
                        .WithMany()
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("NTierArchitecture.Core.Models.Journey", b =>
                {
                    b.Navigation("Passengers");
                });
#pragma warning restore 612, 618
        }
    }
}
